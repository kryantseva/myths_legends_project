import re
import os

def remove_comments_from_file(filepath):
    """
    –£–¥–∞–ª—è–µ—Ç –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–µ (//) –∏ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ (/* */) –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.
    –î–ª—è Python-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (#, —Ç—Ä–∏–ø–ª-–∫–∞–≤—ã—á–∫–∏) –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –¥—Ä—É–≥–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.
    """
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()

        # –£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (//)
        # –ò—â–µ—Ç // –∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
        # –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã, –µ—Å–ª–∏ // –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ª–∏—Ç–µ—Ä–∞–ª–æ–≤!
        content = re.sub(r'//.*', '', content)

        # –£–¥–∞–ª–µ–Ω–∏–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (/* */)
        # re.DOTALL (s) –ø–æ–∑–≤–æ–ª—è–µ—Ç '.' —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª–∞–º –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
        content = re.sub(r'(?<!:)//.*', '', content)

        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Ñ–∞–π–ª: {filepath}")
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {filepath}")
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {filepath}: {e}")

if __name__ == "__main__":
    # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ó–∞–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º –∑–¥–µ—Å—å ---
    # –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.
    # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–µ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º.
    file_paths_to_process = [
        r"D:\myths_legends_project\frontend\myths_legends_app\src\pages\HomePage.js",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\App.css",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\App.js",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\index.css",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\index.js",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\components\AuthContext.js",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\components\Layout.js",
        r"D:\myths_legends_project\frontend\myths_legends_app\src\components\PlaceDetailModal.js",
        r"D:\myths_legends_project\backend\places\signals.py",
        r"D:\myths_legends_project\backend\places\models.py",
        r"D:\myths_legends_project\backend\places\filters.py",
        r"D:\myths_legends_project\backend\places\apps.py",
        r"D:\myths_legends_project\backend\places\admin.py",
        r"D:\myths_legends_project\backend\places\management\commands\populate_data.py",
        r"D:\myths_legends_project\backend\places\tests\test_api.py",
        r"D:\myths_legends_project\backend\places\api\viewsets.py",
        r"D:\myths_legends_project\backend\places\api\urls.py",
        r"D:\myths_legends_project\backend\places\api\serializers.py",
        r"D:\myths_legends_project\backend\places\api\permissions.py",
        r"D:\myths_legends_project\backend\myths_legends_project\wsgi.py",
        r"D:\myths_legends_project\backend\myths_legends_project\urls.py",
    ]

    if not file_paths_to_process:
        print("–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π 'file_paths_to_process'.")
    else:
        print("\n–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤...")
        for path in file_paths_to_process:
            if os.path.isfile(path): # –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
                remove_comments_from_file(path)
            else:
                print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: –§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π: {path}")
        print("\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


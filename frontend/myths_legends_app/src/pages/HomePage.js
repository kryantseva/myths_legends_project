import React, { useEffect, useState, useCallback } from "react";
import { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from "react-leaflet";
import { Icon } from "leaflet";
import axios from 'axios'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º axios –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
import L from 'leaflet'; // –ò–º–ø–æ—Ä—Ç Leaflet –¥–ª—è L.latLng
import iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png';
import iconUrl from 'leaflet/dist/images/marker-icon.png';
import shadowUrl from 'leaflet/dist/images/marker-shadow.png';

// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ Leaflet –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —á—Ç–æ–±—ã –æ–Ω–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å
// –≠—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
// –ü–æ—Å–∫–æ–ª—å–∫—É App.js –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç HomePage, –∏ App.js —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç—Ç–æ—Ç –±–ª–æ–∫,
// –∑–¥–µ—Å—å –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ–ø—É—Å—Ç–∏—Ç—å, –Ω–æ –¥–ª—è —Å–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ HomePage
// –∏ –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ HomePage –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ–∑ App.js,
// –µ–≥–æ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ App.js —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –µ–≥–æ, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω–æ.
// –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ App.js —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —ç—Ç–æ—Ç –±–ª–æ–∫, –µ–≥–æ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –æ—Ç—Å—é–¥–∞.
// –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —Ç–∞–∫ –∫–∞–∫ App.js –±—ã–ª —É–ø—Ä–æ—â–µ–Ω, —ç—Ç–æ—Ç –±–ª–æ–∫ —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–¥–µ—Å—å.
delete L.Icon.Default.prototype._getIconUrl;
L.Icon.Default.mergeOptions({
    iconRetinaUrl: iconRetinaUrl,
    iconUrl: iconUrl,
    shadowUrl: shadowUrl,
});

// –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–æ–≤
const customMarkerIcon = new Icon({
  iconUrl: "https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png",
  shadowUrl: "https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png",
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});

const userLocationIcon = new Icon({
  iconUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png",
  shadowUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png",
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowSize: [41, 41]
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–æ–∫–∏ WKT (Well-Known Text) –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
const parseWktPoint = (wktString) => {
  if (!wktString || typeof wktString !== 'string') {
    return null;
  }
  // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∏—Å–µ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏ "POINT (X Y)"
  const match = wktString.match(/POINT \(([^ ]+) ([^ ]+)\)/);
  if (match && match.length === 3) {
    const longitude = parseFloat(match[1]); // X - —ç—Ç–æ –¥–æ–ª–≥–æ—Ç–∞
    const latitude = parseFloat(match[2]);  // Y - —ç—Ç–æ —à–∏—Ä–æ—Ç–∞
    if (!isNaN(longitude) && !isNaN(latitude)) {
      return { longitude, latitude };
    }
  }
  return null;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–∞—Ä–∫–µ—Ä–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function LocationMarker({ position }) {
  const map = useMap(); // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —ç–∫–∑–µ–º–ø–ª—è—Ä—É –∫–∞—Ä—Ç—ã

  // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–¥–∞–Ω–∞, —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
  useEffect(() => {
    if (position) {
      map.flyTo(position, map.getZoom());
    }
  }, [position, map]);

  return position === null ? null : (
    <Marker position={position} icon={userLocationIcon}>
      <Popup>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –∑–¥–µ—Å—å (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)!</Popup>
    </Marker>
  );
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ú–æ—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è"
function MapEventsHandler({ onLocateMe }) {
  const map = useMapEvents({}); // –ü—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ä—Ç–µ

  return (
    <div style={{
      position: 'absolute',
      bottom: '20px',
      right: '20px',
      zIndex: 1000 // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –ø–æ–≤–µ—Ä—Ö –∫–∞—Ä—Ç—ã
    }}>
      <button
        onClick={() => onLocateMe(map)}
        style={{
          width: '50px',
          height: '50px',
          borderRadius: '50%',
          backgroundColor: '#007bff',
          color: 'white',
          fontSize: '24px',
          border: 'none',
          cursor: 'pointer',
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
          boxShadow: '0 2px 5px rgba(0,0,0,0.2)'
        }}
        title="–ú–æ—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è"
      >
        üìç {/* –ò–ª–∏ –∏–∫–æ–Ω–∫–∞ –∫–æ–º–ø–∞—Å–∞/–ø—Ä–∏—Ü–µ–ª–∞ */}
      </button>
    </div>
  );
}


// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç HomePage
function HomePage() {
  const [places, setPlaces] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–µ—Å—Ç
  const [userLocation, setUserLocation] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const kazanCoordinates = [55.7961, 49.1064]; // –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –ö–∞–∑–∞–Ω–∏
  const initialZoom = 15;
  const radiusKm = 15; // –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–∏—Ö –º–µ—Å—Ç –≤ –∫–º

  // –§–ò–ö–°–ò–†–û–í–ê–ù–ù–´–ï –ö–û–û–†–î–ò–ù–ê–¢–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
  const fixedTestLatitude = 55.7961;
  const fixedTestLongitude = 49.1064;


  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Å—Ç –∏–∑ API
  // –¢–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã latitude –∏ longitude –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "nearest"
  const fetchPlaces = useCallback(async (latitude = null, longitude = null) => {
    let url = `${process.env.REACT_APP_API_BASE_URL}/api/places/`;
    if (latitude !== null && longitude !== null) {
      url = `${process.env.REACT_APP_API_BASE_URL}/api/places/nearest/?lat=${latitude}&lon=${longitude}&radius_km=${radiusKm}`;
    }

    try {
      const response = await axios.get(url); // –ò—Å–ø–æ–ª—å–∑—É–µ–º axios
      if (response.status !== 200) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const data = response.data; // Axios —É–∂–µ –ø–∞—Ä—Å–∏—Ç JSON

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ GeoJSON FeatureCollection
      if (data && data.type === 'FeatureCollection' && Array.isArray(data.features)) {
          setPlaces(data.features);
      } else {
          console.error("API response is not a valid GeoJSON FeatureCollection:", data);
          setPlaces([]);
      }
    } catch (error) {
      console.error("Error fetching places:", error);
      setPlaces([]);
    }
  }, [radiusKm]); // –î–æ–±–∞–≤–∏–ª–∏ radiusKm –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ useCallback

  // –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –í–°–ï–• –º–µ—Å—Ç –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchPlaces();
  }, [fetchPlaces]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è"
  const handleLocateMe = useCallback((mapInstance) => {
    // –í–º–µ—Å—Ç–æ –≤—ã–∑–æ–≤–∞ map.locate() –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    const fixedLatLng = L.latLng(fixedTestLatitude, fixedTestLongitude);
    setUserLocation(fixedLatLng); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
    mapInstance.flyTo(fixedLatLng, mapInstance.getZoom()); // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    fetchPlaces(fixedTestLatitude, fixedTestLongitude); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—Ç–∞ –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
  }, [fetchPlaces, fixedTestLatitude, fixedTestLongitude]);


  return (
    <div className="main">
      <MapContainer
        center={kazanCoordinates}
        zoom={initialZoom}
        scrollWheelZoom={true}
        style={{ height: 'calc(100vh - 80px)', width: '100%' }} // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è –∫–∞—Ä—Ç—ã
      >
        {/* –°–ª–æ–π —Å –∫–∞—Ä—Ç–æ–π OpenStreetMap */}
        <TileLayer
          attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />

        {/* –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ LocationMarker */}
        <LocationMarker position={userLocation} />

        {/* –ö–Ω–æ–ø–∫–∞ "–ú–æ—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è" */}
        <MapEventsHandler onLocateMe={handleLocateMe} />

        {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ API */}
        {places.map(place => {
          const coords = parseWktPoint(place.geometry);

          if (!coords) {
            console.warn("–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–µ—Å—Ç–æ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (WKT):", place);
            return null;
          }

          // –ï—Å–ª–∏ —É –º–µ—Å—Ç–∞ –µ—Å—Ç—å 'distance', –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –µ–≥–æ –≤ Popup
          const distanceInfo = place.properties.distance !== null && place.properties.distance !== undefined
            ? `<br/>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${place.properties.distance.toFixed(2)} –∫–º`
            : '';

          return (
            <Marker
              position={[coords.latitude, coords.longitude]}
              icon={customMarkerIcon}
              key={place.id || place.properties.id} // –ò—Å–ø–æ–ª—å–∑—É–µ–º place.id –∏–ª–∏ place.properties.id –¥–ª—è –∫–ª—é—á–∞
            >
              <Popup>
                {/* –î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –º–µ—Å—Ç–∞ —á–µ—Ä–µ–∑ place.properties */}
                <b>{place.properties.name}</b><br />
                {place.properties.description}
                {distanceInfo} {/* –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ */}
                {place.properties.image && (
                  <img
                    src={place.properties.image}
                    alt={place.properties.name}
                    style={{ maxWidth: '100px', maxHeight: '100px', marginTop: '5px' }}
                  />
                )}
                <p>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {place.properties.categories}</p>
                <p>–†–µ–π—Ç–∏–Ω–≥: {place.properties.avg_rating ? place.properties.avg_rating.toFixed(1) : '–ù–µ—Ç'}</p>
                <p>–ó–∞–º–µ—Ç–æ–∫: {place.properties.notes_count}</p>
              </Popup>
            </Marker>
          );
        })}
      </MapContainer>
    </div>
  );
}

export default HomePage;
